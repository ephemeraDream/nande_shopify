{{ 'section-collection-default.css' | asset_url | stylesheet_tag }}

<div class="collection_default_section padding-sider" style="--product-img-ratio: {{ section.settings.image_aspect_ratio | default: '1' }};">
  <div class="collection_default">
    <h2 class="collection_default_title">{{ section.settings.title }}</h2>
    <div class="collection_default_text text-body">{{ section.settings.text }}</div>
    <div class="collection_default_head">
      {% for collection in section.settings.collection_list %}
        <a class="collection_default_head_item" href="{{ collection.url }}">{{ collection.title }}</a>
      {% endfor %}
    </div>
    {% paginate collection.products by 12 %}
      <div class="collection_default_contain">
        {% for product in collection.products %}
          {% liquid
            assign featured_image = product.featured_image
            assign second_image = null

            if featured_image
              assign found = false
              for img in product.images
                if found
                  assign second_image = img
                  break
                endif
                if img.src == featured_image.src
                  assign found = true
                endif
              endfor

              if second_image == null
                for img in product.images
                  if img.src != featured_image.src
                    assign second_image = img
                    break
                  endif
                endfor
              endif
            else
              assign second_image = product.images[1]
            endif
          %}
          <a
            class="collection_default_product{% if second_image != blank %} collection_default_product_hoverchange{% endif %}"
            data-type="{{ product.type | handleize }}"
            href="{{ product.url }}"
          >
            <div class="collection_default_product_img">
              {% if featured_image %}
                {{
                  featured_image
                  | image_url: width: featured_image.width
                  | image_tag: alt: product.title, class: 'collection_default_product_img_first'
                }}
              {% endif %}

              {% if second_image and second_image.src != featured_image.src %}
                {{
                  second_image
                  | image_url: width: second_image.width
                  | image_tag: alt: product.title, class: 'collection_default_product_img_second'
                }}
              {% endif %}
              {% comment %} <img src="{{ product.featured_media | image_url }}" alt="{{ product.title }}"> {% endcomment %}
              {% assign sale_info = product.metafields.custom.sale_info.value %}
              <div class="collection_default_product_tagbox">
                {% if product.compare_at_price != blank and product.compare_at_price > product.price %}
                  <div class="collection_default_product_tag">
                    {{ settings.discount_symbol | default: "-" }} {{ product.compare_at_price | minus: product.price | money_without_trailing_zeros }}
                  </div>
                {% endif %}
                {% if sale_info != blank and sale_info.name != blank %}
                  <div class="collection_default_product_saleinfo">{{ sale_info.name }}</div>
                {% endif %}
                {% if product.metafields.custom.product_tag.value != blank %}
                  <div class="collection_default_product_tag">
                    {{ product.metafields.custom.product_tag.value }}
                  </div>
                {% endif %}
              </div>
            </div>
            <div class="collection_default_product_info">
              <h4 class="collection_default_product_title">{{ product.title }}</h4>
              <div>
                {% render 'product-rating', product: product %}
                <div class="collection_default_product_price">
                  <div>
                    {{ product.price | money_without_trailing_zeros }}
                  </div>
                  {% if product.compare_at_price != blank and product.compare_at_price > product.price %}
                    <div class="collection_default_product_price_cap">
                      {{ product.compare_at_price | money_without_trailing_zeros }}
                    </div>
                  {% endif %}
                </div>
                <div class="collection_default_product_btn nd-btn">
                  {{ 'common.jetzt_konfigurieren' | t }}
                  {{ 'icon-right-arrow.svg' | inline_asset_content }}
                </div>
              </div>
            </div>
          </a>
        {% endfor %}
      </div>

      {% render 'custom-pagination', paginate: paginate %}
    {% endpaginate %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let currentType = 'all';

    function bindPaginationLinks() {
      document.querySelectorAll('.ajax_pagination.page').forEach(function (link) {
        link.addEventListener('click', function (event) {
          event.preventDefault();
          const page = this.getAttribute('data-page');

          let url = `/collections/all?page=${page}`;
          if (currentType !== 'all') {
            url = `/collections/types?q=${currentType}&page=${page}`;
          }

          fetchProducts(url);
        });
      });

      document.querySelectorAll('.ajax_pagination.prev, .ajax_pagination.next').forEach(function (btn) {
        btn.addEventListener('click', function (event) {
          event.preventDefault();
          const url = this.getAttribute('href');
          fetchProducts(url);
        });
      });
    }

    function fetchProducts(url) {
      fetch(url)
        .then((response) => response.text())
        .then((data) => {
          const parser = new DOMParser();
          const html = parser.parseFromString(data, 'text/html');

          document.querySelector('.collection_default_contain').innerHTML = html.querySelector('.collection_default_contain')?.innerHTML || '';
          document.querySelector('.custom_pagination').innerHTML =
            html.querySelector('.custom_pagination')?.innerHTML || '';

          bindPaginationLinks();

          document.querySelectorAll('.ajax_pagination.page').forEach(function (link) {
            let page = link.getAttribute('data-page');
            let newHref = `/collections/all?page=${page}`;
            if (currentType !== 'all') {
              newHref = `/collections/types?q=${currentType}&page=${page}`;
            }
            link.setAttribute('href', newHref);
          });

          window.history.replaceState(null, "", url.toString());
        });
    }

    {% comment %} function bindCategoryFilters() {
      document.querySelectorAll('.categorize-group-btn').forEach(function (btn) {
        btn.addEventListener('click', function (event) {
          event.preventDefault();

          document.querySelectorAll('.categorize-group-btn').forEach((el) => el.classList.remove('active'));
          this.classList.add('active');

          currentType = this.getAttribute('data-type');

          let url = '/collections/all?page=1';
          if (currentType !== 'all') {
            url = `/collections/types?q=${currentType}&page=1`;
          }

          fetchProducts(url);
        });
      });
    } {% endcomment %}

    bindPaginationLinks();
  });
</script>

{% schema %}
{
  "name": "collection default",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "richtext",
      "id": "title",
      "label": "title"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "text"
    },
    {
      "type": "collection_list",
      "id": "collection_list",
      "label": "collection list"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Product image aspect ratio",
      "options": [
        {
          "value": "1",
          "label": "1:1 (Square)"
        },
        {
          "value": "1.33",
          "label": "4:3 (Landscape)"
        },
        {
          "value": "0.75",
          "label": "3:4 (Portrait)"
        },
        {
          "value": "1.5",
          "label": "3:2 (Wide)"
        }
      ],
      "default": "1.33"
    }
  ],
  "presets": [
    {
      "name": "collection default"
    }
  ]
}
{% endschema %}
