{%- style -%}
  {%- if section.settings.height_mode == 'fixed' -%}
    .section_banner .swiper-wrapper.fixed-height{
      height: {{ section.settings.fixed_height_desktop }}px;
    }
    {%- if section.settings.mobile_stacked -%}
      @media screen and (max-width: 768px) {
        .section_banner .swiper-wrapper.fixed-height img,.section_banner .swiper-wrapper.fixed-height video{
          height: {{ section.settings.fixed_height_mobile }}px;
        }
        .section_banner .swiper-wrapper.fixed-height {
          height: auto;
        }
      }
    {%- else -%}
      @media screen and (max-width: 768px) {
        .section_banner .swiper-wrapper.fixed-height{
          height: {{ section.settings.fixed_height_mobile }}px;
        }
      }
    {%- endif -%}
  {%- endif -%}
  {%- if section.settings.mobile_stacked -%}
    @media screen and (max-width: 768px) {
    .section_banner .swiper-slide .session-box-padding.mobile-stacked{
      position: relative;
      height: auto;
      min-height: 280px;
      padding-top:2rem;
      padding-bottom:2rem;
    }
    .section_banner .swiper-slide .session-box-padding.mobile-stacked .section_banner_info{
      top:unset;left:unset;bottom:unset;right:unset;transform:unset;
    }
  }
  {%- endif -%}

  {%- if section.settings.autoplay -%}
    .section_banner {
      --duration: {{ section.settings.autoplay_speed }}s;
      --play-state: paused;
    }

  {%- endif -%}

  .slideshow-ctrl {
    --text-color: {{ section.settings.pagination_color.red }} {{ section.settings.pagination_color.green }} {{ section.settings.pagination_color.blue }};
  }

  .bg_color {
    background-color: {{ section.settings.background_color }};
  }
  @media screen and (min-width: 768px) {
    .bg_color {
    background-color:transparent;
   }
  }
{%- endstyle -%}

{{ 'section-banner.css' | asset_url | stylesheet_tag }}

<div
  class="section_banner swiper bg_color"
  data-autoplay="{{ section.settings.autoplay }}"
  data-speed="{{ section.settings.autoplay_speed }}"
  data-transition="{{ section.settings.transition }}"
>
  <div class="swiper-wrapper {{ section.settings.height_mode }}-height" aria-live="polite">
    {% for block in section.blocks %}
      <div class="swiper-slide{% if block.settings.file_image_pe != blank %} has-mobile-img{% endif %}">
        {% if block.settings.file_type == 'image' %}
          {% if block.settings.file_image != blank %}
            <a href="{{ block.settings.link }}">
              {{-
                block.settings.file_image
                | image_url: width: block.settings.file_image.width
                | image_tag: alt: block.settings.file_image.alt, class: 'swiper-slide_img_pc'
              -}}
            </a>
          {% endif %}
          {% if block.settings.file_image_pe != blank %}
            <a href="{{ block.settings.link }}">
              {{-
                block.settings.file_image_pe
                | image_url: width: block.settings.file_image_pe.width
                | image_tag: alt: block.settings.file_image_pe.alt, class: 'swiper-slide_img_pe'
              -}}
            </a>
          {% endif %}
        {% else %}
          {% assign poster_image = blank %}
          {% if block.settings.cover_image != blank %}
            {% assign poster_image = block.settings.cover_image | image_url: width: block.settings.cover_image.width %}
          {% endif %}
          {% if block.settings.video_url != blank %}
            <video
              autoplay
              loop
              muted
              playsinline
              preload="auto"
              {% if poster_image != blank %}
                poster="{{ poster_image }}"
              {% endif %}
              src="{{ block.settings.video_url }}"
            ></video>
          {% else %}
            {{
              block.settings.url_upload
              | video_tag:
                autoplay: true,
                loop: true,
                muted: true,
                playsinline: true,
                webkit_playsinline: true,
                preload: 'metadata',
                poster: poster_image
            }}
          {% endif %}
        {% endif %}
        <a href="{{ block.settings.link }}">
        <div class="session-box-padding {% if section.settings.mobile_stacked %}mobile-stacked{% endif %}">
          <div class="session-box-inner">
            <div
              class="section_banner_info section_banner_info_{{ block.settings.file_position }} {{ block.settings.overlay_text_align }}"
              style="color: {{ block.settings.transparent_content_color }};"
            >
              <h5 class="section_banner_sub_title">{{ block.settings.sub_title }}</h5>
              <h2 class="section_banner_info_title">{{ block.settings.title }}</h2>
              <div class="section_banner_info_text text-body">{{ block.settings.text }}</div>
              {% if block.settings.btn_text != blank %}
                <div class="section_banner_info_btn nd-btn" href="{{ block.settings.link }}">
                  {{ block.settings.btn_text }}
                  {{ 'icon-right-arrow.svg' | inline_asset_content }}
                </div>
              {% endif %}
              {% if block.settings.show_countdown %}
                {%- assign countdown = block.settings.countdown -%}
                <div
                  class="section_banner_countdown_box"
                  data-end-date="{{ countdown.datetime | date: "%Y-%m-%dT%H:%M:%SZ" }}"
                >
                  <span class="section_banner_countdown_box_text">{{ 'common.ends_in' | t }}</span>
                  <div class="section_banner_countdown_box_item" data-type="day"></div>
                  <span>:</span>
                  <div class="section_banner_countdown_box_item" data-type="hour"></div>
                  <span>:</span>
                  <div class="section_banner_countdown_box_item" data-type="minute"></div>
                  <span>:</span>
                  <div class="section_banner_countdown_box_item" data-type="second"></div>
                </div>
              {% endif %}
            </div>
          </div>
        </div>
        </a>
      </div>
    {% endfor %}
  </div>
  <div class="section_banner_swiper_prev swiper_btn_white swiper_btn_white_prev">
    {{- 'swiper-left.svg' | inline_asset_content -}}
  </div>
  <div class="section_banner_swiper_next swiper_btn_white swiper_btn_white_next">
    {{- 'swiper-right.svg' | inline_asset_content -}}
  </div>
  {% comment %} 控件组 {% endcomment %}
  {%- if section.blocks.size > 0 -%}
    <div class="slideshow-ctrl {{ section.settings.nav_position }}">
      {%- if section.settings.nav_style == 'slideshow_nav_dots'
        or section.settings.nav_style == 'slideshow_nav_lines'
      -%}
        <div class="slideshow-pagination flex items-center">
          {%- for block in section.blocks -%}
            <div
              class="page-btn"
              data-index="{{ forloop.index0 }}"
              aria-controls="slideshow-{{ section.id }}"
              {% if forloop.first %}
                aria-current="true"
              {% endif %}
            >
              <span class="visually-hidden">
                {{- 'sections.slideshow.load_slide' | t }}
                {{ forloop.index }}
                {{ 'general.slider.of' | t }}
                {{ forloop.length -}}
              </span>
              {%- if section.settings.nav_style == 'slideshow_nav_lines' -%}
                <span class="page-btn__line block relative overflow-hidden"></span>
              {%- else -%}
                <svg width="30" height="30" viewBox="0 0 30 30" fill="none" class="page-btn__circle">
                  <circle class="page-btn__fg-circle" cx="15" cy="15" r="3.5" />
                  <circle class="page-btn__bg-circle" cx="15" cy="15" r="6" />
                </svg>
              {%- endif -%}
            </div>
          {%- endfor -%}
        </div>
      {%- endif -%}

      {%- if section.settings.nav_style == 'arrows' or section.settings.autoplay -%}
        <div class="slideshow-nav flex items-center">
          {%- if section.settings.nav_style == 'arrows' -%}
            <div class="slideshow-nav__btn btn" name="prev" aria-controls="slideshow-{{ section.id }}">
              <span class="visually-hidden">{{ 'general.slider.previous' | t }}</span>
              {% render 'icon-chevron-left' %}
            </div>

            <div class="slideshow-nav__counter">
              <span class="slideshow-nav__counter-current">1</span>
              <span aria-hidden="true"> / </span>
              <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
              <span class="slideshow-nav__counter-total">{{ section.blocks.size }}</span>
            </div>
          {%- endif -%}

          {%- if section.settings.autoplay -%}
            <div class="slideshow-nav__autoplay {% unless section.settings.slider_pause %}hidden{% endunless %}">
              <div class="slideshow-nav__btn autoplay-btn btn">
                <span class="pause-icon block">
                  <span class="visually-hidden">{{ 'general.slider.pause' | t }}</span>
                  {% render 'icon-pause' %}
                </span>
                <span class="play-icon block">
                  <span class="visually-hidden">{{ 'general.slider.play' | t }}</span>
                  {% render 'icon-video' %}
                </span>
              </div>
            </div>
          {%- endif -%}

          {%- if section.settings.nav_style == 'arrows' -%}
            <div class="slideshow-nav__btn btn" name="next" aria-controls="slideshow-{{ section.id }}">
              <span class="visually-hidden">{{ 'general.slider.next' | t }}</span>
              {% render 'icon-chevron-right' %}
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}
    </div>
  {%- endif -%}
</div>

<script>
  (() => {
  const bannerEl = document.querySelector(".section_banner");
  const wrapperEl = document.querySelector(".section_banner .swiper-wrapper");
  const autoplayBtn = document.querySelector(".autoplay-btn");
  // 绑定你自定义的分页按钮点击事件
  const pageButtons = document.querySelectorAll(".page-btn");
  pageButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      const index = parseInt(btn.dataset.index, 10);
      swiper.slideToLoop(index); // slideToLoop 保证 loop 模式下正确跳转
    });
  });

  // 更新 aria-current 的高亮状态
  function updatePaginationHighlight(activeIndex) {
    pageButtons.forEach((btn, idx) => {
      if (idx === activeIndex) {
        btn.setAttribute("aria-current", "true");
      } else {
        btn.removeAttribute("aria-current");
      }
    });
  }

  const updateCounter = (index) => {
    const current = document.querySelector(".slideshow-nav__counter-current");
    if (current) current.textContent = (index + 1).toString();
  };

  let autoplayStartTime = Date.now();
  let pauseTimeStart = 0;
  let timeLeft = 0;
  let timer = null;

  const swiper = new Swiper(".section_banner", {
    loop: {% if section.blocks.size > 1 %}true{% else %}false{% endif %},
    effect: "{{ section.settings.transition }}".replace("-", ""), // slide, fade
    autoplay: {% if section.blocks.size > 1 and section.settings.autoplay %}{
      delay: {{ section.settings.autoplay_speed | times: 1000 }},
      disableOnInteraction: false,
    }{% else %}false{% endif %},
    navigation: {
      nextEl: ".slideshow-nav__btn[name='next']",
      prevEl: ".slideshow-nav__btn[name='prev']",
    },
    on: {
      init: function () {
        // 初始设置为 running
        if (bannerEl) bannerEl.style.setProperty("--play-state", "running");
        updatePaginationHighlight(this.realIndex);
        updateCounter(this.realIndex);
        
        // 如果只有一个slide，隐藏导航按钮
        if (this.slides.length <= 1) {
          const navButtons = bannerEl.querySelectorAll('.slideshow-nav__btn[name="prev"], .slideshow-nav__btn[name="next"]');
          navButtons.forEach(btn => {
            btn.style.display = 'none';
          });
        }
      },
      slideChange: function () {
        updatePaginationHighlight(this.realIndex);
        updateCounter(this.realIndex);
        timeLeft = this.params.autoplay.delay;
      },
      autoplayStart: function () {
        if (bannerEl) bannerEl.style.setProperty("--play-state", "running");
        autoplayStartTime = Date.now();
      },
      autoplayStop: function () {
        if (bannerEl) bannerEl.style.setProperty("--play-state", "paused");
      }
    }
  });

  // 鼠标悬停暂停 autoplay（仅当有多个slide时）
  if (bannerEl && swiper.slides.length > 1) {
    bannerEl.addEventListener("mouseenter", () => {
      const autoplay = bannerEl.getAttribute("data-autoplay");
      if (autoplay === "true") {
        swiper.autoplay.stop();
        pauseTimeStart = Date.now();
        const elapsed = pauseTimeStart - autoplayStartTime;
        timeLeft = swiper.params.autoplay.delay - elapsed;

        // 防止负值
        if (timeLeft < 10) timeLeft = 10;
      }
    });
    bannerEl.addEventListener("mouseleave", () => {
      const autoplay = bannerEl.getAttribute("data-autoplay");
      if (autoplay === "true") {
        bannerEl.style.setProperty("--play-state", "running");
        clearTimeout(timer);
        timer = setTimeout(() => {
          swiper.slideNext();
          swiper.autoplay.start();
        }, timeLeft);
      }
    });
  }

  // 播放/暂停按钮切换（仅当有多个slide时）
  if (autoplayBtn && swiper.slides.length > 1) {
    let playing = true;
    autoplayBtn.addEventListener("click", () => {
      if (playing) {
        swiper.autoplay.stop();
        autoplayBtn.classList.add("paused");
        if (bannerEl) bannerEl.setAttribute("data-autoplay", "false");
      } else {
        swiper.autoplay.start();
        autoplayBtn.classList.remove("paused");
        if (bannerEl) bannerEl.setAttribute("data-autoplay", "true");
      }
      playing = !playing;
      console.log(playing);
    });
  } else if (autoplayBtn && swiper.slides.length <= 1) {
    // 如果只有一个slide，隐藏autoplay按钮
    autoplayBtn.style.display = 'none';
  }

  // 底部导航按钮（仅当有多个slide时）
  if (swiper.slides.length > 1) {
    document.querySelector(".section_banner_swiper_prev").addEventListener("click", () => {
      swiper.slidePrev()
    })

    document.querySelector(".section_banner_swiper_next").addEventListener("click", () => {
      swiper.slideNext()
    })
  } else {
    // 如果只有一个slide，隐藏底部导航按钮
    const bottomNavButtons = document.querySelectorAll(".section_banner_swiper_prev, .section_banner_swiper_next");
    bottomNavButtons.forEach(btn => {
      if (btn) btn.style.display = 'none';
    });
  }


    const countdownEl = document.querySelectorAll('.section_banner_countdown_box');
    if (!countdownEl.length) return;

    countdownEl.forEach((item) => {
      const endDateStr = item.getAttribute('data-end-date');
      const endDate = new Date(endDateStr);

      const updateCountdownInnerHTML = (days, hours, minutes, seconds) => {
        if (days > 0) {
          item.querySelector(".section_banner_countdown_box_item[data-type='day']").innerHTML = String(days).padStart(
            2,
            '0'
          );
        }
        item.querySelector(".section_banner_countdown_box_item[data-type='hour']").innerHTML = String(hours).padStart(
          2,
          '0'
        );
        item.querySelector(".section_banner_countdown_box_item[data-type='minute']").innerHTML = String(
          minutes
        ).padStart(2, '0');
        item.querySelector(".section_banner_countdown_box_item[data-type='second']").innerHTML = String(
          seconds
        ).padStart(2, '0');

        if (days == 0 && item.querySelector(".section_banner_countdown_box_item[data-type='day']")) {
          item.querySelector(".section_banner_countdown_box_item[data-type='day'] + span").remove();
          item.querySelector(".section_banner_countdown_box_item[data-type='day']").remove();
        }
      };

      function updateCountdown() {
        const now = new Date();
        const diff = endDate - now;
        let days = 0,
          hours = 0,
          minutes = 0,
          seconds = 0;

        if (diff <= 0) {
          updateCountdownInnerHTML(days, hours, minutes, seconds);
          item.classList.add("hidden")
          return;
        }

        days = Math.floor(diff / (1000 * 60 * 60 * 24));
        hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
        minutes = Math.floor((diff / (1000 * 60)) % 60);
        seconds = Math.floor((diff / 1000) % 60);

        updateCountdownInnerHTML(days, hours, minutes, seconds);
      }

      updateCountdown();
      setInterval(updateCountdown, 1000);
    });
  })();
</script>

{% schema %}
{
  "name": "banner",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "height_mode",
      "label": "Image height",
      "options": [
        {
          "value": "auto",
          "label": "Height of first image"
        },
        {
          "value": "fixed",
          "label": "Fixed height (set below)"
        },
        {
          "value": "screen",
          "label": "Full screen height"
        }
      ],
      "default": "auto"
    },
    {
      "type": "range",
      "id": "fixed_height_desktop",
      "min": 400,
      "max": 1000,
      "step": 10,
      "unit": "px",
      "label": "Minimum fixed height on large screens",
      "default": 600
    },
    {
      "type": "range",
      "id": "fixed_height_mobile",
      "min": 250,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "Minimum fixed height on mobile",
      "default": 350
    },
    {
      "type": "checkbox",
      "id": "mobile_stacked",
      "label": "Show text below image on mobile",
      "info": "Does not apply to \"Full screen height\".",
      "default": false
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#dddddd"
    },
    {
      "type": "header",
      "content": "Slideshow appearance"
    },
    {
      "type": "select",
      "id": "nav_style",
      "label": "Pagination style",
      "options": [
        {
          "value": "arrows",
          "label": "Arrows"
        },
        {
          "value": "slideshow_nav_dots",
          "label": "Dots"
        },
        {
          "value": "slideshow_nav_lines",
          "label": "Lines"
        }
      ],
      "default": "slideshow_nav_lines"
    },
    {
      "type": "color",
      "id": "pagination_color",
      "label": "Pagination color",
      "default": "#ffffff"
    },
    {
      "type": "select",
      "id": "nav_position",
      "label": "Pagination position",
      "options": [
        {
          "value": "justify-start",
          "label": "Left"
        },
        {
          "value": "justify-center",
          "label": "Center"
        },
        {
          "value": "justify-end",
          "label": "Right"
        }
      ],
      "default": "justify-center"
    },
    {
      "type": "select",
      "id": "transition",
      "label": "Slide transition",
      "options": [
        {
          "value": "slide-fade",
          "label": "Slide and fade"
        },
        {
          "value": "slide",
          "label": "Slide"
        },
        {
          "value": "fade",
          "label": "Fade"
        }
      ],
      "default": "slide-fade"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-rotate slides",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "slider_pause",
      "label": "Show pause button",
      "info": "Only applies when auto-rotate is turned on.",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "label": "Change slides every",
      "min": 3,
      "max": 30,
      "step": 1,
      "unit": "s",
      "default": 5
    }
  ],
  "blocks": [
    {
      "type": "banner_item",
      "name": "swiper",
      "settings": [
        {
          "type": "richtext",
          "id": "sub_title",
          "label": "sub_title"
        },
        {
          "type": "richtext",
          "id": "title",
          "label": "title"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "text"
        },
        {
          "type": "text",
          "id": "btn_text",
          "label": "button text"
        },
        {
          "type": "url",
          "id": "link",
          "label": "link"
        },
        {
          "type": "select",
          "id": "file_position",
          "label": "file position",
          "options": [
            {
              "value": "top_left",
              "label": "top left"
            },
            {
              "value": "top_center",
              "label": "top center"
            },
            {
              "value": "top_right",
              "label": "top right"
            },
            {
              "value": "middle_left",
              "label": "middle left"
            },
            {
              "value": "middle_center",
              "label": "middle center"
            },
            {
              "value": "middle_right",
              "label": "middle right"
            },
            {
              "value": "bottom_left",
              "label": "bottom left"
            },
            {
              "value": "bottom_center",
              "label": "bottom center"
            },
            {
              "value": "bottom_right",
              "label": "bottom right"
            }
          ],
          "default": "middle_left"
        },
        {
          "type": "select",
          "id": "overlay_text_align",
          "label": "Text alignment",
          "options": [
            {
              "value": "text-start",
              "label": "Left"
            },
            {
              "value": "text-center",
              "label": "Center"
            },
            {
              "value": "text-end",
              "label": "Right"
            }
          ],
          "default": "text-start"
        },
        {
          "type": "color",
          "id": "transparent_content_color",
          "label": "Text color",
          "info": "设置文字颜色",
          "default": "#ffffff"
        },
        {
          "type": "radio",
          "id": "file_type",
          "label": "file type",
          "default": "image",
          "options": [
            {
              "value": "image",
              "label": "image"
            },
            {
              "value": "video",
              "label": "video"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "file_image",
          "label": "file image"
        },
        {
          "type": "image_picker",
          "id": "file_image_pe",
          "label": "file image mobile"
        },
        {
          "type": "image_picker",
          "id": "cover_image",
          "label": "video cover image"
        },
        {
          "type": "text",
          "id": "video_url",
          "label": "video url"
        },
        {
          "type": "video",
          "id": "url_upload",
          "label": "video upload"
        },
        {
          "type": "checkbox",
          "id": "show_countdown",
          "label": "show countdown",
          "default": false
        },
        {
          "type": "metaobject",
          "metaobject_type": "countdown_date_time",
          "id": "countdown",
          "label": "countdown"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "banner",
      "blocks": [
        {
          "type": "banner_item"
        }
      ]
    }
  ]
}
{% endschema %}
