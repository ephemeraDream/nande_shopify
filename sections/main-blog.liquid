{{ 'component-article-card.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'section-main-blog.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 767px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}


{%- paginate blog.articles by 10 -%}
  <div class="main-blog session-box-padding section-{{ section.id }}-padding">
    
    <h2 class="session-box-inner title--primary{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {{ blog.title | escape }}
    </h2>
    <div class="session-box-inner nav_header">
      <nav class="blog-categories">
        {% for block in section.blocks %}
          {% assign blog_item = block.settings.blog %}
          <a href="{{ blog_item.url }}" class="nav_item {% if blog_item.handle == blog.handle %}active{% endif %}">
            {{ blog_item.title }}
          </a> 
        {% endfor %}
      </nav>
      <div class="blog-sort-buttons">
        <div class="sort-btn" data-sort="latest">Latest</div>
        <div class="sort-btn" data-sort="popular">Popular</div>
      </div>
    </div>
    <div class="session-box-inner blog-articles {% if section.settings.layout == 'collage' %}blog-articles--onecard{% endif %}">
      {%- for article in blog.articles -%}
        <div
          class="blog-articles__article article{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
          {% if settings.animations_reveal_on_scroll %}
            data-cascade
            style="--animation-order: {{ forloop.index }};"
          {% endif %}
          data-popular="{{ article.metafields.custom.popular_score }}" data-date="{{ article.published_at }}"
        >
          {%- render 'article-card',
            article: article,
            media_height: section.settings.image_height,
            media_aspect_ratio: article.image.aspect_ratio,
            show_image: section.settings.show_image,
            show_date: section.settings.show_date,
            show_author: section.settings.show_author,
            show_excerpt: true,
            blog_title: blog.title
          -%}
        </div>
      {%- endfor -%}
    </div>

    {%- if paginate.pages > 1 -%}
      {%- render 'pagination', paginate: paginate -%}
    {%- endif -%}
  </div>
{%- endpaginate -%}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const articlesWrapper = document.querySelector('.blog-articles');
    const buttons = document.querySelectorAll('.blog-sort-buttons .sort-btn');
    const urlParams = new URLSearchParams(window.location.search);
    let sort = urlParams.get('sort') || 'latest';
  
    function sortArticles(sortType) {
      const articles = Array.from(articlesWrapper.children);
      articles.sort((a, b) => {
        if (sortType === 'popular') {
          const aScore = parseFloat(a.dataset.popular) || 0;
          const bScore = parseFloat(b.dataset.popular) || 0;
          return bScore - aScore; // 热度高的排前
        } else {
          const aDate = new Date(a.dataset.date);
          const bDate = new Date(b.dataset.date);
          return bDate - aDate; // 时间新的排前
        }
      });
      articles.forEach(article => articlesWrapper.appendChild(article));
    }
  
    // 初始化高亮和排序
    buttons.forEach(btn => {
      btn.classList.toggle('active', btn.dataset.sort === sort);
    });
    sortArticles(sort);
  
    // 绑定点击事件
    buttons.forEach(btn => {
      btn.addEventListener('click', function () {
        buttons.forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        sort = this.dataset.sort;
        sortArticles(sort);
        // 可选：改变 URL 参数但不刷新页面
        history.replaceState(null, '', `?sort=${sort}`);
      });
    });
  });
  
</script>

{% schema %}
{
  "name": "t:sections.main-blog.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "select",
      "id": "layout",
      "options": [
        {
          "value": "grid",
          "label": "t:sections.main-blog.settings.layout.options__1.label"
        },
        {
          "value": "collage",
          "label": "t:sections.main-blog.settings.layout.options__2.label"
        }
      ],
      "default": "collage",
      "label": "t:sections.main-blog.settings.layout.label"
    },
    {
      "type": "checkbox",
      "id": "show_image",
      "default": true,
      "label": "t:sections.main-blog.settings.show_image.label"
    },
    {
      "type": "select",
      "id": "image_height",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-blog.settings.image_height.options__1.label"
        },
        {
          "value": "small",
          "label": "t:sections.main-blog.settings.image_height.options__2.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-blog.settings.image_height.options__3.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-blog.settings.image_height.options__4.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.main-blog.settings.image_height.label"
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "default": true,
      "label": "t:sections.main-blog.settings.show_date.label"
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "default": false,
      "label": "t:sections.main-blog.settings.show_author.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 80
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 100
    }
  ],
  "blocks": [
    {
      "type": "blog_item",
      "name": "博客分类",
      "settings": [
        {
          "type": "blog",
          "id": "blog",
          "label": "选择一个博客分类"
        }
      ]
    }
  ],
}
{% endschema %}
