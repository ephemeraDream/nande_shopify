{% comment %}
  ------------------------------------------------------------
  Contact List - 各种联系方式
  ------------------------------------------------------------
{% endcomment %}

<div class="contact-list session-box-padding padding-top-120 padding-bottom-120">
  <div class="session-box-inner">
    {% if section.settings.title != blank %}
      <h2 class="steps-title padding-bottom-30">{{ section.settings.title }}</h2>
    {% endif %}
    {% if section.settings.description != blank %}
      <div class="text-body padding-bottom-30">{{ section.settings.description }}</div>
    {% endif %}

    <div class="steps-grid padding-top-30">
      {% for block in section.blocks %}
        <div class="influencer-step">
          <div>
            <h3>{{ block.settings.title }}</h3>
            <div class="text-body step-desc">{{ block.settings.text }}</div>
          </div>
          <div class="bottom">
            <a href="{{ block.settings.btn_link }}" class="nd-btn">
              {{ block.settings.btn_text }}
              {{ 'icon-right-arrow.svg' | inline_asset_content }}
            </a>
            {{-
              block.settings.icon
              | image_url: width: block.settings.icon.width
              | image_tag: alt: block.settings.title, class: 'influencer-step-icon'
            -}}
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('#shopify-section-{{ section.id }} .nd-btn').forEach((item) => {
      item.addEventListener('click', (e) => {
        e.preventDefault();
        const href = item.getAttribute('href');
        console.log('Button clicked, href:', href);
        
        if (href === '#tidio-chat') {
          console.log('Attempting to open Tidio chat via API...');
          
          // 封装打开聊天函数
          function openTidioChat() {
            console.log('Trying to open Tidio chat via API...');
            
            if (window.tidioChatApi) {
              console.log('Tidio API available');
              console.log('popUpOpen:', typeof window.tidioChatApi.popUpOpen);
              console.log('chatDisplay:', typeof window.tidioChatApi.chatDisplay);
              console.log('ready:', window.tidioChatApi.readyEventWasFired);
              
              // 尝试关键方法
              const apiMethods = [
                () => {
                  console.log('Trying popUpOpen()');
                  return window.tidioChatApi.popUpOpen();
                },
                () => {
                  console.log('Trying chatDisplay()');
                  return window.tidioChatApi.chatDisplay();
                }
              ];
              
              for (let i = 0; i < apiMethods.length; i++) {
                try {
                  const result = apiMethods[i]();
                  console.log(`Method ${i + 1} result:`, result);
                  if (result !== undefined && result !== false) {
                    console.log(`Tidio method ${i + 1} called successfully`);
                    return true;
                  }
                } catch (error) {
                  console.log(`Tidio method ${i + 1} failed:`, error.message);
                }
              }
              
              console.log('All Tidio API methods failed');
              
              // 尝试直接调用全局Tidio方法
              console.log('Trying global Tidio methods...');
              if (window.tidio) {
                try {
                  window.tidio.show();
                  console.log('Called window.tidio.show()');
                  return true;
                } catch (error) {
                  console.log('window.tidio.show() failed:', error.message);
                }
              }
              
              // 最后的尝试：直接操作Tidio的iframe
              console.log('Trying to interact with Tidio iframe directly...');
              const tidioIframe = document.querySelector('#tidio-chat-iframe');
              if (tidioIframe) {
                try {
                  // 尝试通过postMessage与iframe通信
                  tidioIframe.contentWindow.postMessage({
                    type: 'tidio-chat-open',
                    action: 'open'
                  }, '*');
                  console.log('Sent postMessage to Tidio iframe');
                  
                  // 尝试触发iframe的点击事件
                  const clickEvent = new MouseEvent('click', {
                    view: window,
                    bubbles: true,
                    cancelable: true
                  });
                  tidioIframe.dispatchEvent(clickEvent);
                  console.log('Dispatched click event to Tidio iframe');
                  
                  return true;
                } catch (error) {
                  console.log('Failed to interact with Tidio iframe:', error.message);
                }
              }
              
              return false;
            } else {
              console.log('Tidio API not available');
              return false;
            }
          }
          
          // 检查Tidio是否已经ready
          if (window.tidioChatApi && window.tidioChatApi.readyEventWasFired) {
            console.log('Tidio is ready, opening chat directly');
            openTidioChat();
          } else {
            console.log('Tidio not ready, waiting for ready event...');
            
            // 监听ready事件
            const readyHandler = () => {
              console.log('Tidio ready event received');
              openTidioChat();
            };
            
            // 监听多个可能的事件
            document.addEventListener('tidioChat-ready', readyHandler, { once: true });
            window.addEventListener('tidioChat-ready', readyHandler, { once: true });
            
            // 轮询检查ready状态
            let attempts = 0;
            const maxAttempts = 100; // 10秒
            const checkInterval = setInterval(() => {
              attempts++;
              console.log(`Checking Tidio ready status, attempt ${attempts}`);
              
              if (window.tidioChatApi && window.tidioChatApi.readyEventWasFired) {
                console.log('Tidio became ready via polling');
                clearInterval(checkInterval);
                openTidioChat();
              } else if (attempts >= maxAttempts) {
                console.log('Max attempts reached, trying to open anyway');
                clearInterval(checkInterval);
                openTidioChat();
              }
            }, 100);
            
            // 备用方案：直接尝试打开（不等待ready）
            setTimeout(() => {
              console.log('Trying to open Tidio chat without waiting for ready...');
              openTidioChat();
            }, 2000); // 2秒后尝试
          }
        } else {
          console.log('Redirecting to:', href);
          location.href = href;
        }
      });
    });
  });
</script>
<style>
  .contact-list {
    background: #e2ded6;
  }

  .contact-list .steps-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.7rem;
    position: relative;
  }

  .contact-list .influencer-step {
    display: flex;
    flex-direction: column;
    position: relative;
    gap: 1rem;
    padding: 1.5rem 0.9rem 1.5rem 2.4rem;
    background: #fff;
    min-height: 250px;
    justify-content: space-between;
  }
  .contact-list .influencer-step .bottom {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-content: center;
    align-items: center;
  }
  .contact-list .influencer-step .nd-btn {
    margin-top: 0;
  }
  .contact-list .influencer-step-icon {
    width: 40px;
    height: 40px;
    object-fit: contain;
  }

  .contact-list .step-desc {
    color: #1f1f1f;
    line-height: 1.3em;
    margin-top: 1rem;
  }

  .featured-program .step-arrow {
    position: absolute;
    right: -40px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1.5rem;
    font-weight: bold;
    color: #1f1f1f;
  }
  .featured-program .influencer-step:nth-child(3n) .step-arrow {
    display: none;
  }
  @media screen and (max-width: 1024px) {
    .contact-list .steps-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 768px) {
    .contact-list .steps-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
  }
</style>
{% schema %}
{
  "name": "Contact List",
  "settings": [
    {
      "type": "textarea",
      "id": "title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description"
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Description"
        },
        {
          "type": "text",
          "id": "btn_text",
          "label": "Button Text"
        },
        {
          "type": "url",
          "id": "btn_link",
          "label": "Button Link"
        }
      ]
    }
  ],
  "max_blocks": 4,
  "presets": [
    {
      "name": "Contact List",
      "category": "Custom"
    }
  ]
}
{% endschema %}
