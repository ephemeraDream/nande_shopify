{% comment %}
  ------------------------------------------------------------
  Contact List - 各种联系方式
  ------------------------------------------------------------
{% endcomment %}

<div class="contact-list session-box-padding padding-top-120 padding-bottom-120">
  <div class="session-box-inner">
    {% if section.settings.title != blank %}
      <h2 class="steps-title padding-bottom-30">{{ section.settings.title }}</h2>
    {% endif %}
    {% if section.settings.description != blank %}
      <div class="text-body padding-bottom-30">{{ section.settings.description }}</div>
    {% endif %}

    <div class="steps-grid padding-top-30">
      {% for block in section.blocks %}
        <div class="influencer-step">
          <div>
            <h3>{{ block.settings.title }}</h3>
            <div class="text-body step-desc">{{ block.settings.text }}</div>
          </div>
          <div class="bottom">
            <a href="{{ block.settings.btn_link }}" class="nd-btn">
              {{ block.settings.btn_text }}
              {{ 'icon-right-arrow.svg' | inline_asset_content }}
            </a>
            {{-
              block.settings.icon
              | image_url: width: block.settings.icon.width
              | image_tag: alt: block.settings.title, class: 'influencer-step-icon'
            -}}
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('#shopify-section-{{ section.id }} .nd-btn').forEach((item) => {
      item.addEventListener('click', (e) => {
        e.preventDefault();
        const href = item.getAttribute('href');
        console.log('Button clicked, href:', href);
        
        if (href === '#tidio-chat') {
          console.log('Attempting to open Tidio chat...');
          
          // 调试：显示所有Tidio相关的对象
          console.log('=== Tidio Debug Info ===');
          console.log('window.tidioChatApi:', window.tidioChatApi);
          console.log('window.tidio:', window.tidio);
          console.log('window.tidioChat:', window.tidioChat);
          
          if (window.tidioChatApi) {
            console.log('tidioChatApi methods:', Object.getOwnPropertyNames(window.tidioChatApi));
            console.log('tidioChatApi.readyEventWasFired:', window.tidioChatApi.readyEventWasFired);
          }
          
          // 查找Tidio相关的DOM元素
          const tidioElements = document.querySelectorAll('[class*="tidio"], [id*="tidio"], [data-tidio]');
          console.log('Tidio DOM elements found:', tidioElements.length);
          tidioElements.forEach((el, index) => {
            console.log(`Tidio element ${index}:`, el);
          });
          console.log('=== End Debug Info ===');
          
          // 封装打开函数
          function openChat() {
            console.log('Opening Tidio chat...');
            
            // 尝试多种可能的Tidio API方法
            const methods = [
              () => window.tidioChatApi && window.tidioChatApi.popUpOpen(),
              () => window.tidioChatApi && window.tidioChatApi.chatDisplay(),
              () => window.tidioChatApi && window.tidioChatApi.open(),
              () => window.tidioChatApi && window.tidioChatApi.show(),
              () => window.tidio && window.tidio.show(),
              () => window.tidio && window.tidio.open(),
              () => window.tidioChat && window.tidioChat.show(),
              () => window.tidioChat && window.tidioChat.open(),
              () => window.tidioChatApi && window.tidioChatApi.display(),
              () => window.tidioChatApi && window.tidioChatApi.toggle(),
              () => {
                // 尝试直接调用Tidio的全局方法
                if (typeof window.tidioChatApi === 'object' && window.tidioChatApi) {
                  for (let method of ['popUpOpen', 'chatDisplay', 'open', 'show', 'display', 'toggle']) {
                    if (typeof window.tidioChatApi[method] === 'function') {
                      console.log(`Trying tidioChatApi.${method}()`);
                      return window.tidioChatApi[method]();
                    }
                  }
                }
                return false;
              }
            ];
            
            for (let i = 0; i < methods.length; i++) {
              try {
                const result = methods[i]();
                if (result !== false) {
                  console.log(`Tidio chat opened successfully using method ${i + 1}`);
                  return;
                }
              } catch (error) {
                console.log(`Method ${i + 1} failed:`, error.message);
              }
            }
            
            console.error('All Tidio API methods failed');
            
            // 最后的尝试：检查是否有Tidio的DOM元素
            const tidioWidget = document.querySelector('[data-tidio-widget]') || 
                               document.querySelector('.tidio-widget') ||
                               document.querySelector('#tidio-chat-widget');
            
            if (tidioWidget) {
              console.log('Found Tidio widget element, trying to click it');
              tidioWidget.click();
            } else {
              console.log('No Tidio widget element found');
            }
          }

          // 检查Tidio是否已经加载
          if (window.tidioChatApi) {
            console.log('Tidio API found');
            if (window.tidioChatApi.readyEventWasFired) {
              console.log('Tidio is ready, opening chat directly');
              openChat();
            } else {
              console.log('Tidio not ready, waiting for ready event');
              
              // 监听ready事件
              const readyHandler = () => {
                console.log('Tidio ready event fired');
                openChat();
              };
              
              // 监听tidioChat-ready事件
              document.addEventListener('tidioChat-ready', readyHandler, { once: true });
              
              // 备用方案：轮询检查
              let attempts = 0;
              const maxAttempts = 50; // 5秒
              const checkReady = setInterval(() => {
                attempts++;
                console.log(`Checking Tidio ready status, attempt ${attempts}`);
                
                if (window.tidioChatApi && window.tidioChatApi.readyEventWasFired) {
                  console.log('Tidio became ready via polling');
                  clearInterval(checkReady);
                  openChat();
                } else if (attempts >= maxAttempts) {
                  console.log('Max attempts reached, trying to open anyway');
                  clearInterval(checkReady);
                  openChat();
                }
              }, 100);
            }
          } else {
            console.log('Tidio API not found, trying alternative methods');
            
            // 尝试其他可能的Tidio API方法
            if (window.tidio) {
              console.log('Found window.tidio, trying to open');
              window.tidio.show();
            } else if (window.tidioChat) {
              console.log('Found window.tidioChat, trying to open');
              window.tidioChat.show();
            } else {
              console.log('No Tidio API found, waiting for it to load...');
              // 等待Tidio加载
              const checkTidio = setInterval(() => {
                if (window.tidioChatApi) {
                  clearInterval(checkTidio);
                  openChat();
                }
              }, 100);
              
              // 10秒后停止检查
              setTimeout(() => {
                clearInterval(checkTidio);
                console.log('Timeout waiting for Tidio to load');
              }, 10000);
            }
          }
        } else {
          console.log('Redirecting to:', href);
          location.href = href;
        }
      });
    });
  });
</script>
<style>
  .contact-list {
    background: #e2ded6;
  }

  .contact-list .steps-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.7rem;
    position: relative;
  }

  .contact-list .influencer-step {
    display: flex;
    flex-direction: column;
    position: relative;
    gap: 1rem;
    padding: 1.5rem 0.9rem 1.5rem 2.4rem;
    background: #fff;
    min-height: 250px;
    justify-content: space-between;
  }
  .contact-list .influencer-step .bottom {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-content: center;
    align-items: center;
  }
  .contact-list .influencer-step .nd-btn {
    margin-top: 0;
  }
  .contact-list .influencer-step-icon {
    width: 40px;
    height: 40px;
    object-fit: contain;
  }

  .contact-list .step-desc {
    color: #1f1f1f;
    line-height: 1.3em;
    margin-top: 1rem;
  }

  .featured-program .step-arrow {
    position: absolute;
    right: -40px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1.5rem;
    font-weight: bold;
    color: #1f1f1f;
  }
  .featured-program .influencer-step:nth-child(3n) .step-arrow {
    display: none;
  }
  @media screen and (max-width: 1024px) {
    .contact-list .steps-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 768px) {
    .contact-list .steps-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
  }
</style>
{% schema %}
{
  "name": "Contact List",
  "settings": [
    {
      "type": "textarea",
      "id": "title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description"
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Description"
        },
        {
          "type": "text",
          "id": "btn_text",
          "label": "Button Text"
        },
        {
          "type": "url",
          "id": "btn_link",
          "label": "Button Link"
        }
      ]
    }
  ],
  "max_blocks": 4,
  "presets": [
    {
      "name": "Contact List",
      "category": "Custom"
    }
  ]
}
{% endschema %}
