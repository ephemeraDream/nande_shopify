{{ 'section-img-with-text-box-simplicity.css' | asset_url | stylesheet_tag }}
{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 767px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
<div
  class="img_with_text_box_simplicity_section padding-sider section-{{ section.id }}-padding"
  id="{{ section.settings.spec_id }}"
   style="background-color: {{ section.settings.background_color }};"
>
  <div class="img_with_text_box_simplicity">
    <h2 class="img_with_text_box_simplicity_maintitle">{{ section.settings.main_title }}</h2>
    <div class="img_with_text_box_simplicity_contain">
      {% for block in section.blocks %}
        <div class="img_with_text_box_simplicity_contain_item img_with_text_box_simplicity_contain_item_{{ section.settings.row_num }}">
          <div class="img_with_text_box_simplicity_filebox">
            {% if block.settings.file_type == 'image' and block.settings.file_image != blank %}
              {{-
                block.settings.file_image
                | image_url: width: block.settings.file_image.width
                | image_tag: alt: block.settings.title, class: 'img_with_text_box_simplicity_filebox_image'
              -}}
            {% else %}
              {% assign poster_image = blank %}
              {% if block.settings.cover_image != blank %}
                {% assign poster_image = block.settings.cover_image | image_url: width: 353 %}
              {% endif %}
              {% if block.settings.video_url != blank %}
                <video
                  autoplay
                  loop
                  muted
                  playsinline
                  webkit-playsinline
                  preload="metadata"
                  class="img_with_text_box_simplicity_filebox_video"
                  {% if poster_image != blank %}
                    poster="{{ poster_image }}"
                  {% endif %}
                  src="{{ block.settings.video_url }}"
                ></video>
              {% else %}
                {{
                  block.settings.url_upload
                  | video_tag:
                    class: 'img_with_text_box_simplicity_filebox_video',
                    autoplay: true,
                    loop: true,
                    muted: true,
                    playsinline: true,
                    webkit_playsinline: true,
                    preload: 'metadata',
                    poster: poster_image
                }}
              {% endif %}
            {% endif %}
          </div>
          <div class="img_with_text_box_simplicity_info">
            <h4 class="img_with_text_box_simplicity_title">{{ block.settings.title }}</h4>
            <div class="img_with_text_box_simplicity_desc text-body">{{ block.settings.description }}</div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // 处理移动端视频播放
  const videos = document.querySelectorAll('#shopify-section-{{ section.id }} .img_with_text_box_simplicity_filebox_video');
  
  videos.forEach(video => {
    let hasUserInteracted = false;
    let playButton = null;
    
    // 创建播放按钮覆盖层
    function createPlayButton() {
      if (playButton) return;
      
      playButton = document.createElement('div');
      playButton.className = 'video-play-overlay';
      playButton.innerHTML = `
        <div class="video-play-button">
          <svg width="60" height="60" viewBox="0 0 60 60" fill="none">
            <circle cx="30" cy="30" r="30" fill="rgba(0,0,0,0.7)"/>
            <path d="M25 20L25 40L40 30L25 20Z" fill="white"/>
          </svg>
        </div>
      `;
      
      // 添加样式
      playButton.style.cssText = `
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(0,0,0,0.3);
        cursor: pointer;
        z-index: 10;
        transition: opacity 0.3s ease;
      `;
      
      playButton.addEventListener('click', function() {
        hasUserInteracted = true;
        video.play().then(() => {
          playButton.style.opacity = '0';
          setTimeout(() => {
            if (playButton && playButton.parentNode) {
              playButton.parentNode.removeChild(playButton);
            }
          }, 300);
        }).catch(e => {
          console.log('Manual play failed:', e);
        });
      });
      
      // 移动端触摸事件
      playButton.addEventListener('touchstart', function(e) {
        e.preventDefault();
        hasUserInteracted = true;
        video.play().then(() => {
          playButton.style.opacity = '0';
          setTimeout(() => {
            if (playButton && playButton.parentNode) {
              playButton.parentNode.removeChild(playButton);
            }
          }, 300);
        }).catch(e => {
          console.log('Touch play failed:', e);
        });
      });
      
      video.parentNode.style.position = 'relative';
      video.parentNode.appendChild(playButton);
    }
    
    // 视频加载完成后处理
    video.addEventListener('loadeddata', function() {
      console.log('Video loaded, attempting to play...');
      
      // 尝试自动播放
      video.play().then(() => {
        console.log('Autoplay successful');
        if (playButton) {
          playButton.style.opacity = '0';
          setTimeout(() => {
            if (playButton && playButton.parentNode) {
              playButton.parentNode.removeChild(playButton);
            }
          }, 300);
        }
      }).catch(e => {
        console.log('Autoplay failed, showing play button:', e);
        createPlayButton();
      });
    });
    
    // 处理视频加载错误
    video.addEventListener('error', function() {
      console.log('Video load error');
      // 如果视频加载失败，显示poster图片
      if (video.poster) {
        video.style.backgroundImage = `url(${video.poster})`;
        video.style.backgroundSize = 'cover';
        video.style.backgroundPosition = 'center';
      }
    });
    
    // 视频暂停时显示播放按钮
    video.addEventListener('pause', function() {
      if (!hasUserInteracted && !playButton) {
        createPlayButton();
      }
    });
    
    // 强制设置视频属性
    video.setAttribute('playsinline', '');
    video.setAttribute('webkit-playsinline', '');
    video.setAttribute('muted', '');
    video.muted = true;
    
    // 确保视频在视口中时尝试播放
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && !hasUserInteracted) {
          video.play().catch(e => {
            console.log('Intersection play failed:', e);
            if (!playButton) {
              createPlayButton();
            }
          });
        }
      });
    }, { threshold: 0.5 });
    
    observer.observe(video);
  });
});
</script>

{% schema %}
{
  "name": "file box simplicity",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "spec_id",
      "label": "specId"
    },
    {
      "type": "richtext",
      "id": "main_title",
      "label": "title"
    },
    {
      "type": "range",
      "id": "row_num",
      "min": 2,
      "max": 5,
      "step": 1,
      "label": "Number of products per row",
      "default": 3
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 0
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "背景颜色",
      "default": "transparent"
    }
  ],
  "blocks": [
    {
      "type": "file_with_text",
      "name": "file with text",
      "settings": [
        {
          "type": "richtext",
          "id": "title",
          "label": "title"
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "description"
        },
        {
          "type": "radio",
          "id": "file_type",
          "label": "file type",
          "default": "image",
          "options": [
            {
              "value": "image",
              "label": "image"
            },
            {
              "value": "video",
              "label": "video"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "file_image",
          "label": "file image"
        },
        {
          "type": "image_picker",
          "id": "cover_image",
          "label": "cover image"
        },
        {
          "type": "text",
          "id": "video_url",
          "label": "video url"
        },
        {
          "type": "video",
          "id": "url_upload",
          "label": "video upload"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "file box simplicity"
    }
  ]
}
{% endschema %}
