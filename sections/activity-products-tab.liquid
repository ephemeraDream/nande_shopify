{{ 'section-activity-products-tab.css' | asset_url | stylesheet_tag }}

<div class="activity_products_tab_section padding-sider" id="{{ section.settings.specId }}">
  <div class="activity_products_tab">
    <h2 class="activity_products_tab_title">{{ section.settings.title }}</h2>
    <div class="activity_products_tab_text">{{ section.settings.text }}</div>
    <div class="activity_products_tab_head">
      {% for block in section.blocks %}
        <div
          class="activity_products_tab_head_item{% if forloop.first %} active{% endif %}"
          data-value="{{block.settings.title  }}"
        >
          {{ block.settings.title }}
        </div>
      {% endfor %}
    </div>
    {% for block in section.blocks %}
      <div
        class="activity_products_tab_contain{% if forloop.first %} active{% endif %}"
        data-value="{{ block.settings.title }}"
      >
        {% comment %} {% assign first_product = block.settings.product_list | first %}
        <div class="activity_products_tab_contain_first_product">
          <div class="activity_products_tab_contain_first_product_img">
            <img
              src="{{ first_product.featured_media | image_url }}"
              alt="{{ first_product.title }}"
            >
          </div>
          <div class="activity_products_tab_contain_first_product_info">
            <div class="activity_products_tab_contain_first_product_title">{{ first_product.title }}</div>
            {% assign key_features = first_product.metafields.custom.key_features.value %}
            {% if key_features != blank %}
              <div class="activity_products_tab_contain_first_product_desc">
                {{ key_features.description | metafield_tag }}
              </div>
            {% endif %}
            {% assign sale_info = first_product.metafields.custom.sale_info.value %}
            {% if sale_info != blank %}
              <div class="activity_products_tab_saleinfo">
                <div class="activity_products_tab_saleinfo_left">
                  <div class="activity_products_tab_saleinfo_name">{{ sale_info.name }}</div>
                  <div
                    class="activity_products_tab_saleinfo_countdown"
                    data-end-date="{{ sale_info.datetime | date: "%Y-%m-%dT%H:%M:%SZ" }}"
                  >
                    <span class="activity_products_tab_saleinfo_countdown_text">{{ 'common.ends_in' | t }}</span>
                    <div class="activity_products_tab_saleinfo_countdown_item" data-type="day"></div>
                    <span>:</span>
                    <div class="activity_products_tab_saleinfo_countdown_item" data-type="hour"></div>
                    <span>:</span>
                    <div class="activity_products_tab_saleinfo_countdown_item" data-type="minute"></div>
                    <span>:</span>
                    <div class="activity_products_tab_saleinfo_countdown_item" data-type="second"></div>
                  </div>
                </div>
                <div class="activity_products_tab_saleinfo_right">
                  <div class="activity_products_tab_saleinfo_code">
                    {{ 'common.code' | t -}}
                    {{- sale_info.code }}
                  </div>
                  <div class="activity_products_tab_saleinfo_btn" data-code="{{ sale_info.code }}">
                    {{ 'common.copy_and_use' | t }}
                  </div>
                </div>
              </div>
            {% endif %}
            <div class="activity_products_tab_contain_first_product_price">
              <div class="activity_products_tab_contain_first_product_price_dp">
                {{ first_product.price | money_without_trailing_zeros }}
              </div>
              <div class="activity_products_tab_contain_first_product_price_op{% unless first_product.compare_at_price > first_product.price %} hidden{% endunless %}">
                {{ first_product.compare_at_price | money_without_trailing_zeros }}
              </div>
              {%- if section.settings.show_tax_and_shipping -%}
                {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
                  <div class="activity_products_tab_contain_first_product_policies">
                    {%- if cart.taxes_included -%}
                      {{ 'products.product.include_taxes' | t }}
                    {%- endif -%}
                  </div>
                {%- endif -%}
              {%- endif -%}
            </div>
            <a class="activity_products_tab_contain_first_product_btn nd-btn" href="{{ first_product.url }}">
              {{ 'common.jetzt_konfigurieren' | t }}
              {{ 'icon-right-arrow.svg' | inline_asset_content }}
            </a>
          </div>
        </div> {% endcomment %}
        <div class="activity_products_tab_contain_products">
          <div class="swiper activity_products_tab_swiper">
            <div class="swiper-wrapper">
              {% comment %} {% for product in block.settings.product_list offset: 1 %}{% endcomment %}
               {% for product in block.settings.product_list %} 
                {% assign sale_info = product.metafields.custom.sale_info.value %}
                <div class="swiper-slide">
                  <a
                    class="activity_products_tab_product"
                    data-type="{{ product.type | handleize }}"
                    href="{{ product.url }}"
                    data-id="{{ product.id }}"
                  >
                    <div class="activity_products_tab_product_img">
                      <img src="{{ product.featured_media | image_url }}" alt="{{ product.title }}">
                      {% if sale_info != blank %}
                        <div class="activity_products_tab_product_saleinfo">{{ sale_info.name }}</div>
                      {% endif %}
                    </div>
                    <div class="activity_products_tab_product_info">
                      <h4 class="activity_products_tab_product_title">{{ product.title }}</h4>

                      <div>
                        {% if sale_info != blank %}
                          <div class="activity_products_tab_product_saleinfo_code">
                            {{ 'common.code' | t -}}
                            {{- sale_info.code }}
                            <div class="activity_products_tab_saleinfo_btn" data-code="{{ sale_info.code }}">COPY</div>
                          </div>
                        {% endif %}
                        {% render 'product-rating', product: product %}
                        <div class="activity_products_tab_product_price">
                          <div>
                            {{ product.price | money_without_trailing_zeros }}
                          </div>
                          {% if product.compare_at_price != blank and product.compare_at_price > product.price %}
                            <div class="activity_products_tab_product_price_cap">
                              {{ product.compare_at_price | money_without_trailing_zeros }}
                            </div>
                          {% endif %}
                        </div>
                        <div class="activity_products_tab_product_btn nd-btn">
                          {{ 'common.jetzt_konfigurieren' | t }}
                          {{ 'icon-right-arrow.svg' | inline_asset_content }}
                        </div>
                        
                      </div>
                      {% if sale_info != blank %}
                        <div
                          class="activity_products_tab_product_saleinfo_countdown"
                          data-end-date="{{ sale_info.datetime | date: "%Y-%m-%dT%H:%M:%SZ" }}"
                        >
                          <span class="activity_products_tab_product_saleinfo_countdown_text">
                            {{- 'common.ends_in' | t -}}
                          </span>
                          <div class="activity_products_tab_product_saleinfo_countdown_item" data-type="day"></div>
                          <span>:</span>
                          <div class="activity_products_tab_product_saleinfo_countdown_item" data-type="hour"></div>
                          <span>:</span>
                          <div class="activity_products_tab_product_saleinfo_countdown_item" data-type="minute"></div>
                          <span>:</span>
                          <div class="activity_products_tab_product_saleinfo_countdown_item" data-type="second"></div>
                        </div>
                      {% endif %}
                    </div>
                  </a>
                </div>
              {% endfor %}
            </div>
            <!-- 添加导航按钮 -->
            <div class="swiper_btn_white swiper_btn_white_prev activity_products_tab_swiper_prev">
              {{- 'swiper-left.svg' | inline_asset_content -}}
            </div>
            <div class="swiper_btn_white swiper_btn_white_next activity_products_tab_swiper_next">
              {{- 'swiper-right.svg' | inline_asset_content -}}
            </div>
          </div>
        </div>
      </div>
    {% endfor %}
  </div>
</div>

<script>
(() => {
  document.querySelectorAll('#shopify-section-{{ section.id }} .activity_products_tab_head_item').forEach((item) => {
    item.addEventListener('click', () => {
      if (item.classList.contains('active')) return;
      document.querySelector('.activity_products_tab_head_item.active').classList.remove('active');
      item.classList.add('active');
      
      // 滚动到激活的tab位置
      scrollToActiveTab(item);
      
      const value = item.dataset.value;
      document.querySelector('.activity_products_tab_contain.active').classList.remove('active');
      document.querySelector(`.activity_products_tab_contain[data-value="${value}"]`).classList.add('active');
    });
  });

  // 添加滚动到激活tab的函数
  function scrollToActiveTab(activeItem) {
    const tabHead = document.querySelector('#shopify-section-{{ section.id }} .activity_products_tab_head');
    if (!tabHead) return;
    
    // 检查是否有横向滚动条（内容宽度超过容器宽度）
    const hasHorizontalScroll = tabHead.scrollWidth > tabHead.clientWidth;
    if (!hasHorizontalScroll) return; // 没有滚动条就不需要滚动
    
    const tabHeadRect = tabHead.getBoundingClientRect();
    const activeItemRect = activeItem.getBoundingClientRect();
    
    // 计算激活tab相对于容器的位置
    const activeItemLeft = activeItemRect.left - tabHeadRect.left;
    const activeItemRight = activeItemRect.right - tabHeadRect.left;
    const containerWidth = tabHeadRect.width;
    
    let targetScrollLeft = tabHead.scrollLeft;
    
    // 如果激活的tab在可视区域左边，滚动到左边对齐
    if (activeItemLeft < 0) {
      targetScrollLeft = tabHead.scrollLeft + activeItemLeft;
    }
    // 如果激活的tab在可视区域右边，滚动到右边对齐
    else if (activeItemRight > containerWidth) {
      targetScrollLeft = tabHead.scrollLeft + (activeItemRight - containerWidth);
    }
    // 如果激活的tab已经在可视区域内，不需要滚动
    else {
      return;
    }
    
    // 确保滚动位置不超出边界
    targetScrollLeft = Math.max(0, Math.min(targetScrollLeft, tabHead.scrollWidth - tabHead.clientWidth));
    
    // 平滑滚动到目标位置
    tabHead.scrollTo({
      left: targetScrollLeft,
      behavior: 'smooth'
    });
  }

  const initCountDown = (countdownEl, itemClassName) => {
    {% comment %} const countdownEl = document.querySelectorAll('.activity_products_tab_product_saleinfo_countdown'); {% endcomment %}
    if (!countdownEl.length) return;

    countdownEl.forEach((item) => {
      const endDateStr = item.getAttribute('data-end-date');
      const endDate = new Date(endDateStr);

      const updateCountdownInnerHTML = (days, hours, minutes, seconds) => {
        if (days > 0) {
          item.querySelector(`.${itemClassName}[data-type='day']`).innerHTML =
            String(days).padStart(2, '0');
        }
        item.querySelector(`.${itemClassName}[data-type='hour']`).innerHTML =
          String(hours).padStart(2, '0');
        item.querySelector(`.${itemClassName}[data-type='minute']`).innerHTML =
          String(minutes).padStart(2, '0');
        item.querySelector(`.${itemClassName}[data-type='second']`).innerHTML =
          String(seconds).padStart(2, '0');

        if (
          days == 0 &&
          item.querySelector(`.${itemClassName}[data-type='day']`)
        ) {
          item
            .querySelector(`.${itemClassName}[data-type='day'] + span`)
            .remove();
          item.querySelector(`.${itemClassName}[data-type='day']`).remove();
        }
      };

      function updateCountdown() {
        const now = new Date();
        const diff = endDate - now;
        let days = 0,
          hours = 0,
          minutes = 0,
          seconds = 0;

        if (diff <= 0) {
          updateCountdownInnerHTML(days, hours, minutes, seconds);
          if (itemClassName === 'activity_products_tab_product_saleinfo_countdown_item') {
            const parent = item.closest(".activity_products_tab_product")
            parent.querySelector(".activity_products_tab_product_saleinfo").classList.add("hidden")
            parent.querySelector(".activity_products_tab_product_saleinfo_code").classList.add("hidden")
            parent.querySelector(".activity_products_tab_product_saleinfo_countdown").classList.add("hidden")
          } else {
            item.closest('.activity_products_tab_saleinfo').classList.add("hidden")
          }
          return;
        }

        days = Math.floor(diff / (1000 * 60 * 60 * 24));
        hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
        minutes = Math.floor((diff / (1000 * 60)) % 60);
        seconds = Math.floor((diff / 1000) % 60);

        updateCountdownInnerHTML(days, hours, minutes, seconds);
      }

      updateCountdown();
      setInterval(updateCountdown, 1000);
    });
  };

  initCountDown(document.querySelectorAll('#shopify-section-{{ section.id }} .activity_products_tab_product_saleinfo_countdown'), "activity_products_tab_product_saleinfo_countdown_item");
  initCountDown(document.querySelectorAll('#shopify-section-{{ section.id }} .activity_products_tab_saleinfo_countdown'), "activity_products_tab_saleinfo_countdown_item");

  document.querySelectorAll("#shopify-section-{{ section.id }} .activity_products_tab_saleinfo_btn").forEach(item => {
    item.addEventListener('click', async (e) => {
      e.preventDefault();
      const code = item.getAttribute('data-code');
      await navigator.clipboard.writeText(code);

      const originalText = item.innerHTML;
      item.innerHTML = 'Copied';

      setTimeout(() => {
        item.innerHTML = originalText;
      }, 5000);
    });
  });

  // 初始化Swiper
  function initSwiper() {
    const swiperContainers = document.querySelectorAll('#shopify-section-{{ section.id }} .activity_products_tab_swiper');
    
    swiperContainers.forEach((container, index) => {
      const swiper = new Swiper(container, {
        slidesPerView: 'auto',
        spaceBetween: 20,
        loop: false,
        navigation: {
          nextEl: container.querySelector('.activity_products_tab_swiper_next'),
          prevEl: container.querySelector('.activity_products_tab_swiper_prev'),
        },
        breakpoints: {
          320: {
            slidesPerView: 1.1,
            spaceBetween: 20,
          },
          768: {
            slidesPerView: 2.2,
            spaceBetween: 20,
          },
          1024: {
            slidesPerView: 3,
            spaceBetween: 20,
          },
          1440: {
            slidesPerView: 4,
            spaceBetween: 20,
          }
        }
      });
    });
  }

  // 等待DOM加载完成后初始化Swiper
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initSwiper);
  } else {
    initSwiper();
  }
})();
</script>

{% schema %}
{
  "name": "activity products tab",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "specId",
      "label": "specId"
    },
    {
      "type": "richtext",
      "id": "title",
      "label": "title"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "text"
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "tab",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "title"
        },
        {
          "type": "product_list",
          "id": "product_list",
          "label": "product list"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "activity products tab"
    }
  ]
}
{% endschema %}
