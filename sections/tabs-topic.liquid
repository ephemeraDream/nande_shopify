{% comment %}
------------------------------------------------------------
专题详情页：Tab + Swiper 轮播
------------------------------------------------------------
{% endcomment %}

<style>
/* Tab导航横向滚动样式 */
.tabs_topic .tab-titles {
  display: flex;
  overflow-x: auto;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
  white-space: nowrap;
  gap: 2rem;
  padding: 0 2rem;
}

.tabs_topic .tab-titles::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

.tabs_topic .tab-titles li {
  flex: 0 0 auto;
  cursor: pointer;
  padding: 1rem 2rem;
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.tabs_topic .tab-titles li.active {
  background-color: #1F1F1F;
  color: #BDFF00;
}

.tabs_topic .tab-titles li:hover {
  background-color: #f0f0f0;
}

.tabs_topic .tab-titles li.active:hover {
  background-color: #1F1F1F;
}

/* 移动端优化 */
@media screen and (max-width: 768px) {
  .tabs_topic .tab-titles {
    gap: 1rem;
    padding: 0 1rem;
  }
  
  .tabs_topic .tab-titles li {
    padding: 0.8rem 1.5rem;
    font-size: 1.4rem;
  }
}
</style>

<div class="padding-top-120 tabs_topic" id="{{ section.settings.spec_id }}">
  <div class="session-box-padding padding-bottom-60">
    {% unless section.settings.title == blank %}
      <h2 class="session-box-inner">{{ section.settings.title }}</h2>
    {% endunless %}
  </div>

  <!-- Tab nav -->
  <div class="tabs" id="polka_dot_tabs-{{ section.id }}">
    <div class="session-box-padding">
    <ul class="tab-titles session-box-inner">
      {% assign tab_index = 0 %}
      {% for block in section.blocks %}
        {% if block.type == 'tab' %}
          <li data-tab="{{ tab_index }}"
              onclick="switchTab({{ tab_index }})"
              class="{% if forloop.first %}active{% endif %}"
              {{ block.shopify_attributes }}>
            {{ block.settings.tab_title | escape }}
          </li>
          {% assign tab_index = tab_index | plus: 1 %}
        {% endif %}
      {% endfor %}
    </ul>
    </div>

    <!-- Tab pannel -->
    {% assign last_index = tab_index | minus: 1 %}
    {% for i in (0..last_index) %}
    <div class="tab-panel{% unless forloop.first %} hidden{% endunless %}" data-tab-panel="{{ i }}">
    <div class="swiper swiper-{{ i }}">
        <div class="swiper-wrapper">
        {%- for block in section.blocks -%}
            {%- assign i_str = i | append: '' -%}
            {%- if block.type == 'slide' and block.settings.belong_tab == i_str -%}
            <div class="swiper-slide" {{ block.shopify_attributes }}>
                {{-
                    block.settings.image
                    | image_url: width: block.settings.image.width
                    | image_tag: alt: block.settings.title, class: 'polka_dot_swiper_img'
                    -}}
                <div class="polka_dot_swiper_info">
                    <div>
                    <h3 class="polka_dot_swiper_info_title">{{ block.settings.title }}</h3>
                    <div class="text-body polka_dot_swiper_info_text">{{ block.settings.text }}</div>
                    </div>
                    {% if block.settings.btn_text != blank %}
                    <a class="nd-btn" href="{{ block.settings.link }}">
                        {{ block.settings.btn_text }}
                        {{ 'icon-right-arrow.svg' | inline_asset_content }}
                    </a>
                    {% endif %}
                </div>
                
                {% comment %} 获取属于当前tab和当前swiper的product_dot blocks {% endcomment %}
                {% assign product_dot_blocks = section.blocks | where: "type", "product_dot" %}
                {% for product_block in product_dot_blocks %}
                    {% comment %} 计算当前slide在tab中的索引 {% endcomment %}
                    {% assign slide_index = 0 %}
                    {% for slide_block in section.blocks %}
                        {% if slide_block.type == 'slide' and slide_block.settings.belong_tab == i_str %}
                            {% if slide_block == block %}
                                {% break %}
                            {% endif %}
                            {% assign slide_index = slide_index | plus: 1 %}
                        {% endif %}
                    {% endfor %}
                    {% assign slide_index_str = slide_index | append: '' %}
                    
                    {% if product_block.settings.belong_tab == i_str and product_block.settings.belong_slide == slide_index_str and product_block.settings.select_product != blank %}
                    <div
                            class="polka_dot_contain"
                            style="top: {{ product_block.settings.product_Y }}%;left: {{ product_block.settings.product_X }}%"
                    >
                            <div class="polka_dot_icon">{{- 'icon-plus.svg' | inline_asset_content -}}</div>
                            <a class="polka_dot_product {% if product_block.settings.product_X > 60 %} left{% endif %}" href="{{ product_block.settings.select_product.url }}" style="display: none;">
                            <div class="polka_dot_product_img">
                            {{-
                                product_block.settings.select_product.featured_media
                                | image_url: width: product_block.settings.select_product.featured_media.width
                                | image_tag: alt: product_block.settings.select_product.title
                            -}}
                        </div>
                            <div class="polka_dot_product_info">
                                <h4 class="polka_dot_product_info_title truncate-2-lines">
                                  {{ product_block.settings.select_product.metafields.custom.product_model | default: product_block.settings.select_product.title }}
                            </h4>
                                <div class="polka_dot_product_info_price text-body">
                                {{ product_block.settings.select_product.price | money_without_trailing_zeros }}
                            {{- 'icon-shopping-cart.svg' | inline_asset_content -}}
                            </div>
                        </div>
                        </a>
                    </div>
                    {% endif %}
                {% endfor %}
            </div>
            {%- endif -%}
        {%- endfor -%}
        </div>
        <div class="polka_dot_swiper_prev">{{- 'swiper-left.svg' | inline_asset_content -}}</div>
        <div class="polka_dot_swiper_next">{{- 'swiper-right.svg' | inline_asset_content -}}</div>
    </div>
    <div class="swiper-pagination"></div>
    </div>
    {% endfor %}
  </div>
</div>

<script>
// 将switchTab函数定义为全局函数
function switchTab(idx) {
  // nav
  const tabItems = document.querySelectorAll('.tabs_topic .tab-titles li');
  tabItems.forEach(li=>{
    li.classList.toggle('active', li.dataset.tab == idx);
  });
  
  // 滚动到激活的tab位置
  const activeTab = document.querySelector(`.tabs_topic .tab-titles li[data-tab="${idx}"]`);
  if (activeTab) {
    scrollToActiveTab(activeTab);
  }
  
  // pannel
  document.querySelectorAll('.tabs_topic [data-tab-panel]').forEach(p=>{
    p.classList.toggle('hidden', p.dataset.tabPanel != idx);
  });
}

// 添加滚动到激活tab的函数
function scrollToActiveTab(activeItem) {
  const tabTitles = document.querySelector('.tabs_topic .tab-titles');
  if (!tabTitles) return;
  
  // 检查是否有横向滚动条（内容宽度超过容器宽度）
  const hasHorizontalScroll = tabTitles.scrollWidth > tabTitles.clientWidth;
  if (!hasHorizontalScroll) return; // 没有滚动条就不需要滚动
  
  const tabTitlesRect = tabTitles.getBoundingClientRect();
  const activeItemRect = activeItem.getBoundingClientRect();
  
  // 计算激活tab相对于容器的位置
  const activeItemLeft = activeItemRect.left - tabTitlesRect.left;
  const activeItemRight = activeItemRect.right - tabTitlesRect.left;
  const containerWidth = tabTitlesRect.width;
  
  let targetScrollLeft = tabTitles.scrollLeft;
  
  // 如果激活的tab在可视区域左边，滚动到左边对齐
  if (activeItemLeft < 0) {
    targetScrollLeft = tabTitles.scrollLeft + activeItemLeft;
  }
  // 如果激活的tab在可视区域右边，滚动到右边对齐
  else if (activeItemRight > containerWidth) {
    targetScrollLeft = tabTitles.scrollLeft + (activeItemRight - containerWidth);
  }
  // 如果激活的tab已经在可视区域内，不需要滚动
  else {
    return;
  }
  
  // 确保滚动位置不超出边界
  targetScrollLeft = Math.max(0, Math.min(targetScrollLeft, tabTitles.scrollWidth - tabTitles.clientWidth));
  
  // 平滑滚动到目标位置
  tabTitles.scrollTo({
    left: targetScrollLeft,
    behavior: 'smooth'
  });
}

(() => {
  const sectionId = '{{ section.id }}';
  document.addEventListener('DOMContentLoaded', () => {
    const sectionEl = document.getElementById('polka_dot_tabs-' + sectionId);
    sectionEl.querySelectorAll('.tab-panel').forEach(panel => {
        const swiperEl   = panel.querySelector('.swiper');
        const pagination = panel.querySelector('.swiper-pagination');
        const nextBtn    = panel.querySelector('.polka_dot_swiper_next');
        const prevBtn    = panel.querySelector('.polka_dot_swiper_prev');
      
        new Swiper(swiperEl, {
          slidesPerView: 'auto',
          spaceBetween: 60,
          initialSlide: 1,
          centeredSlides: true,
          pagination: {
            el: pagination,
            clickable: true,
          },
          navigation: {
            nextEl: nextBtn,
            prevEl: prevBtn,
          },
        });
      });
      
      // 处理波点点击事件
      sectionEl.querySelectorAll('.polka_dot_contain').forEach(contain => {
        const product = contain.querySelector('.polka_dot_product');
        
        contain.addEventListener('click', (e) => {
          e.stopPropagation();
          sectionEl.querySelectorAll('.polka_dot_contain').forEach(el => {
            el.style.zIndex = 1;
          });
          // 检查当前产品是否已显示
          if (product.style.display === 'none') {
            // 如果隐藏，则显示当前产品，隐藏其他产品
            const currentPanel = contain.closest('.tab-panel');
            currentPanel.querySelectorAll('.polka_dot_product')
                   .forEach(el => el.style.display = 'none');
            product.style.display = '';
            contain.style.zIndex = 3;
          } else {
            // 如果已显示，则隐藏当前产品
            product.style.display = 'none';
          }
        });
      });
      
      // 点击图片区域隐藏所有产品
      sectionEl.querySelectorAll('.polka_dot_swiper_img').forEach(function(imgBox) {
        imgBox.addEventListener('click', function() {
          const currentPanel = imgBox.closest('.tab-panel');
          currentPanel.querySelectorAll('.polka_dot_product').forEach(function(el) {
            el.style.display = 'none';
          });
        });
      });
      
  });
})();
</script>

{% comment %}
──────────────────────── CSS ────────────────────────
{% endcomment %}
<style>
.tabs_topic{margin-bottom: 136px;}
.tabs_topic .tab-titles{
  display:flex;gap:8%;border-bottom:1px solid #E2DED6;list-style:none;margin-bottom:30px;
}
.tabs_topic .tab-titles li{
  padding-bottom:10px;color:#7F7E75;font-size:2.4rem;font-weight:700;
  border-bottom:2px solid transparent;cursor:pointer;transition:all .3s;
  font-variation-settings:"opsz" auto
}
.tabs_topic .tab-titles li.active,
.tabs_topic .tab-titles li:hover{
  color:#1F1F1F;border-bottom-color:#BDFF00
}
@media(max-width:750px){
  .tabs_topic .tab-titles{flex-direction:column}
}

/* tab-panel */
.tab-panel{position:relative}
.tab-panel.hidden{display:none}

/* Swiper */
  .tabs_topic .swiper {
    margin-top: 3rem;
    width: 100%;
  }
  
  .tabs_topic .swiper-slide {
    max-width: 144rem;
    max-height: 68rem;
    position: relative;
  }
  
  .tabs_topic .polka_dot_swiper_img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
  }
  
  .tabs_topic .polka_dot_swiper_info {
    width: 100%;
    position: absolute;
    bottom: 0;
    padding: 0 3.3rem 3rem 3rem;
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    box-sizing: border-box;
  }
  
  .tabs_topic .polka_dot_swiper_info_title {
    color: #FFFFFF;
  }
  
  .tabs_topic .polka_dot_swiper_info_text {
    color: #FFFFFF;
    margin-top: 1.5rem;
  }
  
  .tabs_topic .swiper-pagination {
    display: flex;
    align-items: center;
    justify-content: center;
    bottom: -30px;
  }
  
  .tabs_topic .swiper-pagination-bullet {
    width: 1.6rem;
    height: 1.6rem;
    background: #7F7E75;
    border-radius: 0;
    opacity: 1;
    margin: 0 0.8rem !important;
    border: 0.2rem solid #7F7E75;
    box-sizing: border-box;
  }
  
  .tabs_topic .swiper-pagination-bullet-active {
    background: #BDFF00;
  }
  
  .tabs_topic .polka_dot_swiper_prev,
  .tabs_topic .polka_dot_swiper_next {
    width: 6rem;
    height: 6rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(255, 255, 255, 0.6);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1;
    cursor: pointer;
  }
  
  .tabs_topic .polka_dot_swiper_prev {
    left: 3.90625vw;
  }
  
  .tabs_topic .polka_dot_swiper_next {
    right: 3.90625vw;
  }
  
  .tabs_topic .polka_dot_swiper_contain {
    position: absolute;
    width: 4rem;
    height: 4rem;
    background-color: #BDFF00;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
  }
  
  .tabs_topic .polka_dot_swiper_product {
    position: absolute;
    right: 0;
    bottom: 0;
    transform: translateX(100%) translateY(100%);
    display: flex;
    align-items: stretch;
  }
  
  .tabs_topic .polka_dot_swiper_product_img {
    background-color: #fff;
    width: 11.7rem;
    box-sizing: border-box;
    padding: 1.2rem 1.2rem 0.8rem 1.2rem;
    flex: 0 0 auto;
  }
  
  .tabs_topic .polka_dot_swiper_product_img img {
    width: 100%;
    height: 100%;
    background-color: #FAFAFA;
    object-fit: contain;
    object-position: center center;
  }
  
  .tabs_topic .polka_dot_swiper_product_info {
    padding: 1.6rem 0.8rem 0.8rem 0;
    background-color: #fff;
    width: 23rem;
    flex: 0 0 auto;
    min-height: 8.8rem;
    position: relative;
    left: -0.1rem;
    margin-top: 2.4rem;
  }
  .tabs_topic .polka_dot_swiper_product_info_title{
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
  }
  
  .tabs_topic .polka_dot_swiper_product_info_price {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 1.2rem;
    font-family: "PP Right Grotesk";
    font-size: 2rem;
    font-weight: normal;
    line-height: 130%;
    letter-spacing: 0px;
    font-variation-settings: "opsz" auto;
    color: #000000;
  }
  @media(max-width:750px){
    .tabs_topic .swiper-slide {
        height: 40rem;
    }
    .tabs_topic .polka_dot_swiper_prev,
    .tabs_topic .polka_dot_swiper_next {
        width: 4rem;
        height: 4rem;
    }
    .tabs_topic .polka_dot_swiper_prev svg,
    .tabs_topic .polka_dot_swiper_next svg {
        width: 12px;
    }
    .tabs_topic .polka_dot_swiper_product_img {
        width: 8rem;
      }
      .tabs_topic .polka_dot_swiper_product_info {
        width: 18rem;
    }
  }
  @media(max-width:1024px){
    .tabs_topic .swiper-slide {
        max-height: 50rem;
    }
  }
</style>

{% schema %}
{
  "name": "Tabs Topic",
  "tag": "section",
  "class": "section",
  "disabled_on": { "groups": ["header", "footer"] },
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section title"
    },
    {
      "type": "text",
      "id": "spec_id",
      "label": "specId"
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { "type": "text", "id": "tab_title", "label": "Tab title" }
      ]
    },
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "select",
          "id": "belong_tab",
          "label": "Belongs to Tab",
          "options": [
            { "value": "0", "label": "Tab 1" },
            { "value": "1", "label": "Tab 2" },
            { "value": "2", "label": "Tab 3" },
            { "value": "3", "label": "Tab 4" },
            { "value": "4", "label": "Tab 5" },
            { "value": "5", "label": "Tab 6" }
          ],
          "default": "0"
        },
        { "type": "image_picker", "id": "image", "label": "Image" },
        {
            "type": "text",
            "id": "title",
            "label": "title"
          },
          {
            "type": "text",
            "id": "text",
            "label": "text"
          },
          {
            "type": "text",
            "id": "btn_text",
            "label": "button text"
          },
          {
            "type": "url",
            "id": "link",
            "label": "link"
          }
      ]
    },
    {
      "type": "product_dot",
      "name": "Product Dot",
      "settings": [
        {
          "type": "select",
          "id": "belong_tab",
          "label": "Belongs to Tab",
          "options": [
            { "value": "0", "label": "Tab 1" },
            { "value": "1", "label": "Tab 2" },
            { "value": "2", "label": "Tab 3" },
            { "value": "3", "label": "Tab 4" },
            { "value": "4", "label": "Tab 5" },
            { "value": "5", "label": "Tab 6" }
          ],
          "default": "0"
        },
        {
          "type": "select",
          "id": "belong_slide",
          "label": "Belongs to Slide",
          "options": [
            { "value": "0", "label": "Slide 1" },
            { "value": "1", "label": "Slide 2" },
            { "value": "2", "label": "Slide 3" },
            { "value": "3", "label": "Slide 4" },
            { "value": "4", "label": "Slide 5" },
            { "value": "5", "label": "Slide 6" }
          ],
          "default": "0"
          },
          {
            "type": "product",
            "id": "select_product",
            "label": "product"
          },
          {
            "type": "range",
            "id": "product_X",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "label": "product_X",
            "default": 0
          },
          {
            "type": "range",
            "id": "product_Y",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "label": "product_Y",
            "default": 0
          }
      ]
    }
  ],
  "presets": [
    { "name": "Tabs Topic (default)" }
  ]
}
{% endschema %}
