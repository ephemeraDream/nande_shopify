<div class="product_info_modal_item wholesale_modal_item">
  <div class="product_info_modal_item_left">
    {{ icon }}
    <span class="product_info_modal_item_title">{{ title }}</span>
  </div>
  {{- 'swiper-right.svg' | inline_asset_content -}}

  <div class="common_modal">
    <div class="common_modal_contain">
      <div class="common_modal_head">
        <span></span>
        <div class="common_modal_close">{{- 'icon-close.svg' | inline_asset_content -}}</div>
      </div>
      <div class="common_modal_body">
        <div class="product_info_modal_title">{{ modal_title }}</div>
        <div class="product_info_modal_content">{{ modal_content }}</div>
        {%- form 'contact', id: 'ContactForm', class: contact_form_class -%}
          <input
            autocomplete="email"
            type="email"
            class="field-input"
            name="contact[email]"
            spellcheck="false"
            autocapitalize="off"
            value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
            placeholder="Emal*"
            required
          >
          <input
            class="field-input"
            type="text"
            name="contact[Unternehmen]"
            placeholder="Unternehmen (optional)"
          >
          <input
            class="field-input"
            autocomplete="name"
            type="text"
            name="contact[Name]"
            value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}"
            placeholder="Name (optional)"
          >
          <textarea
            rows="6"
            id="ContactForm-body"
            class="field-input"
            name="contact[Nachricht]"
            placeholder="Nachricht (optional)"
          >
              {{- form.body -}}
            </textarea>
            {%- if form.posted_successfully? -%}
              <p class="form-status form__message success" tabindex="-1" autofocus>
                {{ success_message | default: 'Your message has been sent successfully.' }}
              </p>
            {%- elsif form.errors -%}
              <div class="form__message error" role="alert" tabindex="-1" autofocus>
                {{ error_message | default: 'There was an error sending the form. Please check your input.' }}
              </div>
            {%- else -%}
              <div id="ContactForm-message" class="form__message" style="display:none;"></div>
            {%- endif -%}
          <div class="contact-btn">
            <button type="submit" class="submit-button-t" id="ContactForm-submit">
              <span class="btn-text"> {{ 'common.absenden' | t -}}</span>
              <span class="loading__spinner hidden">
                <svg class="spinner" viewBox="0 0 24 24">
                  <circle class="path" cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-dasharray="31.416" stroke-dashoffset="31.416">
                    <animate attributeName="stroke-dasharray" dur="2s" values="0 31.416;15.708 15.708;0 31.416" repeatCount="indefinite"/>
                    <animate attributeName="stroke-dashoffset" dur="2s" values="0;-15.708;-31.416" repeatCount="indefinite"/>
                  </circle>
                </svg>
              </span>
              {{- 'icon-commit.svg' | inline_asset_content }}
            </button>
          </div>
        {%- endform -%}
        {% comment %}
          <form id="ContactForm" action="/contact" method="post" accept-charset="UTF-8" class="contact_form_class">
            <input
              autocomplete="email"
              type="email"
              class="field-input"
              name="contact[email]"
              spellcheck="false"
              autocapitalize="off"
              value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
              placeholder="Emal*"
              required
            >
            <input
              class="field-input"
              type="text"
              name="contact[Unternehmen]"
              placeholder="Unternehmen (optional)"
            >
            <input
              class="field-input"
              autocomplete="name"
              type="text"
              name="contact[Name]"
              value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}"
              placeholder="Name (optional)"
            >
            <textarea
              rows="6"
              id="ContactForm-body"
              class="field-input"
              name="contact[Nachricht]"
              placeholder="Nachricht (optional)"
            >
                {{- form.body -}}
              </textarea>
            <div class="contact-btn">
              <button type="submit">
                {{ 'common.absenden' | t -}}
                {{- 'icon-commit.svg' | inline_asset_content }}
              </button>
            </div>
          </form>
        {% endcomment %}

        <div class="product_info_modal_tip">{{ modal_tip }}</div>
      </div>
    </div>
  </div>
</div>

<style>
  .submit-button-t.loading {
    position: relative;
    pointer-events: none;
  }
  
  .submit-button-t .loading__spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
  }
  
  .submit-button-t .loading__spinner .spinner {
    width: 100%;
    height: 100%;
    animation: spin 1s linear infinite;
  }
  
  .submit-button-t .loading__spinner .path {
    stroke: currentColor;
    stroke-width: 2;
    stroke-linecap: round;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .submit-button-t.loading .btn-text,
  .submit-button-t.loading svg:not(.spinner) {
    opacity: 0;
  }

  .common_modal_body .form__message{
    padding: 1rem;
    margin-top: 0rem;
  }
  .common_modal_body .form__message.success {
    color: #bdff00;
    font-weight: bold;
    margin-bottom: 20px;
    border:1px solid #bdff00;
    background-color:rgb(105 114 80);
  }

  .common_modal_body .form__message.error {
    color: #ff4d4f;
    font-weight: bold;
    margin-bottom: 20px;
    border:1px solid #ff4d4f;
    background-color:rgb(250 199 201);
  }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('ContactForm');
      const submitBtn = document.getElementById('ContactForm-submit');
      {% comment %} const messageEl = document.getElementById('ContactForm-message'); {% endcomment %}
      const btnText = submitBtn.querySelector('.btn-text');
      const loadingSpinner = submitBtn.querySelector('.loading__spinner');
      const btnIcon = submitBtn.querySelector('svg:not(.spinner)');
      
      if (form && submitBtn) {
        // 检查URL参数和锚点（用于弹窗刷新后显示）
        let formStatus = null;
        let shouldOpenModal = false;
        
        try {
          const urlParams = new URLSearchParams(window.location.search);
          formStatus = urlParams.get('contact_posted');
          console.log('formStatus', formStatus);
          // 检查锚点是否为 #ContactForm（确保是弹窗表单，不是页脚表单）
          const hash = window.location.hash;
          if (hash === '#ContactForm') {
            shouldOpenModal = true;
          }
        } catch (e) {
          console.log('URL parsing error:', e);
        }
        
        // 只有当URL参数存在且锚点是#ContactForm时才打开弹窗
        // 这样可以避免与页脚的ContactFooter表单冲突
        if ((formStatus === 'true' || formStatus === 'false') && shouldOpenModal) {
          // 自动打开弹窗
          const modal = document.querySelector('.wholesale_modal_item .common_modal');
          if (modal) {
            modal.style.display = 'block';
            document.body.style.overflowY = 'hidden';
            
            {% comment %} // 添加关闭按钮事件监听器
            const closeBtn = modal.querySelector('.common_modal_close');
            if (closeBtn && !closeBtn.dataset.autoCloseBound) {
              closeBtn.addEventListener('click', function() {
                modal.style.display = 'none';
                document.body.style.overflowY = 'auto';
              });
              closeBtn.dataset.autoCloseBound = 'true';
            } {% endcomment %}
          }
        }
        
        form.addEventListener('submit', function() {
          // 添加loading状态
          submitBtn.classList.add('loading');
          submitBtn.setAttribute('aria-disabled', 'true');
          submitBtn.disabled = true;
          
          // 显示loading spinner，隐藏文字和图标
          loadingSpinner.classList.remove('hidden');
          btnText.style.display = 'none';
          if (btnIcon) btnIcon.style.display = 'none';
          
          // 隐藏之前的消息
          if (messageEl) {
            messageEl.style.display = 'none';
          }
        });
      }
    });
    </script>
